{"version":3,"file":"static/webpack/static/development/pages/guides/[guide].js.729d2fb911ed9cd1ba6b.hot-update.js","sources":["webpack:///./storage/guides/developer-seniority.md"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`I have been working on redoing the roadmaps â€“ splitting the skillset based on the seniority levels to make them easier to follow and not scare away the new developers and I thought it would be a good idea to reiterate and have a separate article on what I think of different seniority roles.`}</p>\n    <p>{`I have seen many organizations decide the seniority of developers by giving more significance to the years of experience than they should. I have seen developers labeled \"Junior\" doing the work of Senior Developers and I have seen \"Lead\" developers who weren't even qualified to be called \"Senior\". `}</p>\n    <p>{`You can judge the seniority of a developer by looking at their perception of work, how they interact with the peers and how they approach problems. We discuss these three key factors in detail for each of the seniority levels below. `}</p>\n    <h3>{`Different Seniority Titles`}</h3>\n    <p>{`Different organizations might have different seniority titles but they mainly fall into three categories`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Junior Developer`}</li>\n      <li parentName=\"ul\">{`Mid Level Developer`}</li>\n      <li parentName=\"ul\">{`Senior Developer`}</li>\n    </ul>\n    <h3>{`Junior Developer`}</h3>\n    <p>{`Junior developers are normally fresh graduates and either they don't have or they have a minimal industry experience. Now you might have seen different characteristicsIn my experience, here is the list of things that gives Junior developers away: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Because they don't have industry experience, they have a tunnel vision, they need supervision and continuous guidance to be an effective member of the team.`}</li>\n      <li parentName=\"ul\">{`Their main mantra is \"making it work\" without giving much attention to how the solution is achieved. To them, a working software and good software are equivalent. `}</li>\n      <li parentName=\"ul\">{`They need support from other team members in order to complete complex tasks.`}</li>\n      <li parentName=\"ul\">{`They don't try to learn about the business side of the company and don't realize how management / sales / marketing / etc think. `}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;;;;A","sourceRoot":""}